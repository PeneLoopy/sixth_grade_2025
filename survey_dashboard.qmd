---
title: ""
format: 
  dashboard:
    logo: "img/JD_logo.png"
    orientation: rows
---

```{r setup, warning=F, message=F, echo=F, include=F}
# this line specifies options for default options for all R Chunks
knitr::opts_chunk$set(echo=F)

# suppress scientific notation
options(scipen=100)

# install helper package that loads and installs other packages, if needed
if (!require("pacman")) install.packages("pacman", repos = "http://lib.stat.cmu.edu/R/CRAN/")

# install and load required packages
# pacman should be first package in parentheses and then list others
pacman::p_load(pacman,tidyverse, magrittr, ggthemes, 
               wordcloud,tm, RColorBrewer, MASS)

# verify packages
#p_loaded()


```

```{r  data import, warning=F, message=F, include=F}

svy_all <- read_csv("data/survey_mod.csv", show_col_types = F) |>
  mutate(class_time_chr = as.character(class_time),
         class = ifelse(class_time_chr == "08:52:00", "First", "Second"))

svy_all <- svy_all |>
  mutate(age_mod = gsub(" years and ", "_", age, fixed=T),
         age_mod = gsub(" months", "", age_mod, fixed=T)) |>
  separate_wider_delim(age_mod, delim="_", names=c("years", "months")) 

svy_all <- svy_all |>
  mutate(years=as.integer(years),
         months=as.integer(months),
         age_decimal = ((years*12+months)/12) |> round(2) )

svy_all <- svy_all |>
  mutate(sw = ifelse(fav_star_wars=="none", "No", "Yes"),
         mv = ifelse(fav_marvel=="none", "No", "Yes"),
         sw_mv = ifelse(sw=="No" & mv=="No", "Neither Franchise", NA),
         sw_mv = ifelse(sw=="Yes" & mv=="No", "Star Wars, but Not Marvel", sw_mv),
         sw_mv = ifelse(sw=="No" & mv=="Yes", "Marvel, but Not Star Wars", sw_mv),
         sw_mv = ifelse(sw=="Yes" & mv=="Yes", "Both Marvel and Starwars", sw_mv),
         sw_mvF = factor(sw_mv, levels=c("Both Marvel and Starwars",
                                         "Marvel, but Not Star Wars",
                                         "Star Wars, but Not Marvel",
                                         "Neither Franchise")))

(sw_mv_plot <- svy_all |>
  ggplot() +
  geom_bar(aes(x=sw_mvF, fill=sw_mvF), color="darkblue",
            position = "dodge2") +
  theme_classic() + 
  theme(legend.position = "none") +
  scale_y_continuous(breaks=1:23) +
  labs(x="Answer", y="Number of Students", 
       title="Interest in Franchise") +
  coord_flip())
           
svy_all <- svy_all |>
  separate_wider_delim(three_words, delim=", ", 
                       names=c("w1","w2","w3","w4","w5"), 
                       too_few = "align_start")

svy1 <- svy_all |> filter(class=="First") 
svy2 <- svy_all |> filter(class=="Second")


```

# 

![](img/JDMS_logo.png)

<br>

-   **Thank you, Mrs Walsh, for inviting me to your classes.**

<br>

-   **Thank you, students, for filling out the anonymous survey I created.**

# JDMS Six Graders

## Row

### Column {.my-column width="70%"}

![](img/survey_image.png)

### Column {.my-column width="30%"}

-   44 Students responded to the survey I provided.

<br>

-   Google Forms is great for collecting data and creating basic summaries.

<br>

-   **This dashboard goes a little further than the Google Forms summaries.**

# Age

## Row

### Column {.my-column width="40%"}

```{r age, warning=F, message=F}

mn_all <- mean(svy_all$age_decimal, na.rm=T) |> round(2)
mdn_all <- median(svy_all$age_decimal, na.rm=T) |> round(2)

(hist_age_all <- svy_all |> 
    ggplot(aes(x=age_decimal)) +
    geom_histogram(color="darkblue", fill="orange",bins=24) +
    geom_vline(aes(xintercept = mn_all, color = "Mean"), 
               linetype = "dashed", size = 2) +
    geom_vline(aes(xintercept = mdn_all, color = "Median",), 
               linetype = "dashed", size = 2) +
    scale_color_manual(name = "", values = c("Mean" = "red",                              
                                           "Median" = "mediumblue")) +
  scale_x_continuous(limits=c(11,13),
                     labels=c("11 yrs.", 
                              "11 yrs. 6 mos.",
                              "12 yrs.",
                              "12 yrs. 6 mos.",
                              "13 yrs.")) +
  labs(x="Age", y="Number of Students", 
       title="All of Mrs. Walsh's Students") +
  theme_classic())



```

### Column {.my-column width="35%"}

```{r age1, warning=F, message=F}

mn_1 <- mean(svy1$age_decimal, na.rm=T) |> round(2)
mdn_1 <- median(svy1$age_decimal, na.rm=T) |> round(2)

(hist_age_1 <- svy1 |> 
    ggplot(aes(x=age_decimal)) +
    geom_histogram(color="darkblue", fill="orange",bins=24) +
    geom_vline(aes(xintercept = mn_1, color = "Mean"), 
               linetype = "dashed", size = 2) +
    geom_vline(aes(xintercept = mdn_1, color = "Median",), 
               linetype = "dashed", size = 2) +
    scale_color_manual(name = "", values = c("Mean" = "red",                              
                                           "Median" = "mediumblue")) +
  scale_x_continuous(limits=c(11,13),
                     labels=c("11 yrs.", 
                              "11 yrs. 6 mos.",
                              "12 yrs.",
                              "12 yrs. 6 mos.",
                              "13 yrs.")) +
  labs(x="Age", y="Number of Students", 
       title="Mrs. Walsh's First Class") +
  theme_classic())

```

```{r age2, warning=F, message=F}

mn_2 <- mean(svy2$age_decimal, na.rm=T) |> round(2)
mdn_2 <- median(svy2$age_decimal, na.rm=T) |> round(2)

(hist_age_2 <- svy2 |>
    ggplot(aes(x=age_decimal)) +
    geom_histogram(color="darkblue", fill="orange",bins=24) +
    geom_vline(aes(xintercept = mn_2, color = "Mean"), 
               linetype = "dashed", size = 2) +
    geom_vline(aes(xintercept = mdn_2, color = "Median",), 
               linetype = "dashed", size = 2) +
    scale_color_manual(name = "", values = c("Mean" = "red",                              
                                           "Median" = "mediumblue")) +
  scale_x_continuous(limits=c(11,13),
                     labels=c("11 yrs.", 
                              "11 yrs. 6 mos.",
                              "12 yrs.",
                              "12 yrs. 6 mos.",
                              "13 yrs.")) +
  labs(x="Age", y="Number of Students", 
       title="Mrs. Walsh's Second Class") +
  theme_classic())

```

### Column {.my-column width="25%"}

-   Histograms are used to examine numerical data.

<br>

-   [**Red dashed line shows mean (average) age.**]{style="color: red;"}

<br>

-   [**Blue dashed line shows median (middle) age.**]{style="color: mediumblue;"}

# SYR/NYS

## Row

### Column {.my-column width="40%"}

```{r born, warning=F, message=F}

svy_born <- svy_all |>
  dplyr::select(class, born_syr, born_nys, parent_born_syr, parent_born_nys) 

names(svy_born) <- c("Class", "Born in SYR", "Born in NYS",
                     "Parent Born in SYR", "Parent Born in NYS")

svy_born_long <- svy_born |> 
  pivot_longer(cols="Born in SYR":"Parent Born in NYS",
               names_to = "category", values_to = "answer") |>
  mutate(catF = factor(category, levels=c("Born in SYR", 
                                          "Born in NYS",
                                          "Parent Born in SYR",
                                          "Parent Born in NYS")),
         ansF = factor(answer, levels=c("Yes", "No")))

svy_born_long_std <- svy_born_long |>
  filter(category %in% c("Born in SYR", "Born in NYS"))

(svy_born_plot <- svy_born_long_std |> ggplot() +
  geom_bar(aes(x=ansF, fill=ansF), position = "dodge2") +
  facet_grid(~catF) +
  theme_classic() + 
  theme(legend.position = "none") +
  labs(x="Answer", y="Number of Students", 
       title="Were you born in Syracuse and/or NY State?") +
  scale_fill_manual(values=c("darkblue", "orange")) +
  scale_y_continuous(limits=c(0,40), breaks=seq(0,40,5)))
  

```

### Column {.my-column width="40%"}

```{r parents_born, warning=F, message=F}

svy_born_long_pg <- svy_born_long |>
  filter(category %in% c("Parent Born in SYR", "Parent Born in NYS"))

(svy_born_plot <- svy_born_long_pg |> ggplot() +
  geom_bar(aes(x=ansF, fill=ansF), position = "dodge2") +
  facet_grid(~catF) +
  theme_classic() + 
  theme(legend.position = "none") +
  labs(x="Answer", y="Number of Students", 
       title="Was your parent/guardian born in Syaracuse and/or NY State?") +
  scale_fill_manual(values=c("darkblue", "orange")) +
  scale_y_continuous(limits=c(0,40), breaks=seq(0,40,5)))

```

# Chocolate

## Row

### Column {.my-column width="70%"}

```{r chocolate, warning=F, message=F}

svy_choc <- svy_all |>
  dplyr::select(class, chocolate) |>
  separate_wider_delim(chocolate, delim=", ", 
                       names=c("c1", "c2", "c3"), 
                       too_few="align_start") |>
  pivot_longer(cols=c1:c3, names_to = "c", values_to="Chocolate") |>
  filter(!is.na(Chocolate)) |>
  mutate(Choc_new = gsub(" Chocolate", "", Chocolate, fixed=T))

(svy_choc_class_plot <- svy_choc |> ggplot() +
  geom_bar(aes(x=Choc_new, fill=Choc_new), position = "dodge2") +
  facet_grid(~class) +
  theme_classic() + 
  theme(legend.position = "none") +
  labs(x="Type of Chocolate", y="Number of Students", 
       title="Chocolate Preference by Class") +
  scale_fill_manual(values=c("sienna4", "sienna2", "peachpuff2"))+
  scale_y_continuous(limits=c(0,20), breaks=seq(0,20,1)))


```

### Column {.my-column width="30%"}

![](img/chocolate.png)

<br>

-   The two classes have similar but not identical chocolate preferences.

-   Milk Chocolate received $\frac{34}{60}=56\%$ of the votes.

    -   Note that students could vote for more than one type of chocolate so there were 60 answers submitted.

<br>

-   How do your preferences compare to [Google Trends](https://trends.google.com/trends/explore?geo=US&hl=en-US){target="_blank"} for the past week?

# NYS Destinations

## Row

### Column {.my-column width="45%"}

```{r dacks_nys_barplot, warning=F, message=F}

svy_dacks_fair <- svy_all |>
  dplyr::select(class, adirondacks, nys_fair) |>
  mutate(adirF = factor(adirondacks, 
                        levels = c("Never", 
                                   "1 or 2 times",
                                   "3-5 times",
                                   "5-10 times",
                                   "More than 10 times"),
                        labels = c("0","1-2","3-5","5-10","10+")),
         nysfF = factor(nys_fair, 
                        levels = c("Never", 
                                   "1 or 2 times",
                                   "3-5 times",
                                   "5-10 times",
                                   "More than 10 times"),
                        labels = c("0","1-2","3-5","5-10","10+"))) |>
  dplyr::select(class, adirF, nysfF) |>
  rename("Adirondacks" = "adirF", "NY State Fair" = "nysfF") |>
  pivot_longer(cols="Adirondacks":"NY State Fair", 
               names_to="dest", values_to="times")

(svy_dacks_fair_plot <- svy_dacks_fair |> ggplot() +
  geom_bar(aes(x=times, fill=times), color="darkblue", 
           position = "dodge2") +
  facet_grid(~dest) +
  theme_classic() + 
  theme(legend.position = "none") +
  labs(x="Number of Times", y="Number of Students", 
       title="NY State Attractions") +
  scale_y_continuous(limits=c(0,30), breaks=seq(0,30,2)))
```

### Column {.my-column width="30%"}

#### Row

```{r dacks_piechart, warning=F, message=F}

svy_dacks_fair_class_pie_data <- svy_dacks_fair |>
  group_by(class, dest, times) |>
  summarize(n=n())

svy_dacks_fair_pie_data <- svy_dacks_fair |>
  group_by(dest, times) |>
  summarize(n=n())

(svy_dacks_pie <- svy_dacks_fair_pie_data |>
  filter(dest=="Adirondacks") |>
  ggplot(aes(x="", y=n, fill=times)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() + 
  #scale_fill_brewer(palette = "Spectral") +
  labs(fill = "Number of Times", title="Adirondacks"))

```

#### Row

```{r nysf_piechart, warning=F, message=F}
(svy_nysf_pie <- svy_dacks_fair_pie_data |>
  filter(dest=="NY State Fair") |>
  ggplot(aes(x="", y=n, fill=times)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() + 
  #scale_fill_brewer(palette = "Spectral") +
  labs(fill = "Number of Times", title="NY State Fair"))
```

### Column {.my-column width="25%"}

![](img/dacks_nysf.png)

<br>

-   The [Adirondack State Park](https://en.wikipedia.org/wiki/Adirondack_Park){target="blank"} is the LARGEST park in the contiguous 48 united states.

<br>

-   The park includes **6.1 MILLION ACRES** and about half of the land within the park is private, which is unique.

# Social Media

## Row

### Column {.my-column width="60%"}

```{r social_media, warning=F, message=F}

svy_soc_med <- svy_all |>
  dplyr::select(class, fav_soc_med, fav2_soc_med) 

names(svy_soc_med) <- c("Class", "Favorite", "2nd Favorite")

svy_soc_med_long <- svy_soc_med |>
  pivot_longer(cols="Favorite":"2nd Favorite",
               names_to="one_two",values_to="soc_med") |>
  mutate(one_twoF = factor(one_two, 
                           levels=c("Favorite", "2nd Favorite")),
         soc_med = gsub("none", "NONE", soc_med, fixed=T))

svy_soc_med_long$soc_medF <-fct_rev(factor(svy_soc_med_long$soc_med))


(svy_soc_med_plot <- svy_soc_med_long |> ggplot() +
  geom_bar(aes(x=soc_medF, fill=soc_medF), color="darkblue", 
           position = "dodge2") +
  facet_grid(~one_twoF) +
  theme_classic() + 
  theme(legend.position = "none") +
  labs(x="Social Media", y="Number of Students", 
       title="Social Media Preferences") +
  scale_y_continuous(limits=c(0,24), breaks=seq(0,30,2)) +
  coord_flip())

```

### Column {.my-column width="40%"}

![](img/soc_media.png)

<br>

-   Clearly, YouTube is popular.

-   73% of students chose YouTube as their first or second choice:

$$\frac{24+8}{44}=\frac{32}{44}=0.73 = 73\%$$

-   How do your favorites compare to [Google Trends](https://trends.google.com/trends/explore?geo=US&hl=en-US){target="_blank"} for the past week?

# Music Fail

## Row

### Column {.my-column width="60%"}

```{r music, warning=F, message=F}

svy_music <- svy_all |>
  dplyr::select(class, fav_music_25, fav_music_24) 
names(svy_music) <- c("Class", "Favorite 2025", "Favorite 2024")

svy_music <- svy_music |>
  pivot_longer(cols="Favorite 2025":"Favorite 2024",
               names_to="yrs25_24",values_to="fav") |>
  mutate(yrs2425F = factor(yrs25_24, 
                           levels=c("Favorite 2025", "Favorite 2024"))) |>
  separate_wider_delim(fav, delim=", ", 
                       names=c("f1","f2","f3"), 
                       too_few = "align_start") |>
  pivot_longer(cols=f1:f3, names_to="f", values_to="favs") |>
  filter(!is.na(favs)) |>
  mutate(favsu = gsub(" ", "_", favs, fixed=T))
  

(svy_music_plot <- svy_music |> ggplot() +
  geom_bar(aes(x=favs, fill=favs), color="darkblue", 
           position = "dodge2") +
  facet_grid(~yrs2425F) +
  theme_classic() + 
  theme(legend.position = "none") +
  labs(x="Favorite Musician or Group", y="Number of Students", 
       title="Music Changes in One year") +
  coord_flip())

```

### Column {.my-column width="60%"}

-   These data were edited to correct spelling, BUT there were still TOO MANY UNIQUE responses to examine these data with a bar chart.

<br>

-   When asking free-form questions, summarizing the responses requires another option.

# Music Success

## Row

### Column {.my-column width="35%"}

::: {style="text-align: center; font-size: 2em;"}
**2025**
:::

```{r music25, warning=F, message=F}

svy_music25 <- svy_music |>
  filter(yrs25_24=="Favorite 2025")
svy_music24 <- svy_music |>
  filter(yrs25_24=="Favorite 2024")

# Create a text corpus
corpus <- Corpus(VectorSource(svy_music25$favsu))
# Clean the text
#corpus <- tm_map(corpus, content_transformer(tolower))
#corpus <- tm_map(corpus, removePunctuation)
#corpus <- tm_map(corpus, removeNumbers)
#corpus <- tm_map(corpus, removeWords, stopwords("english"))

# Create a term-document matrix
tdm <- TermDocumentMatrix(corpus)
m <- as.matrix(tdm)
word_freqs <- sort(rowSums(m), decreasing = TRUE)
df <- data.frame(word = names(word_freqs), freq = word_freqs)

# Generate the word cloud
wordcloud(words = df$word, freq = df$freq, min.freq = 1,
          max.words = 100, random.order = FALSE, 
          colors = brewer.pal(8, "Dark2"))

```

### Column {.my-column width="35%"}

::: {style="text-align: center; font-size: 2em;"}
**2024**
:::

```{r music24, warning=F, message=F}

# Create a text corpus
corpus <- Corpus(VectorSource(svy_music24$favsu))
# Clean the text
#corpus <- tm_map(corpus, content_transformer(tolower))
#corpus <- tm_map(corpus, removePunctuation)
#corpus <- tm_map(corpus, removeNumbers)
#corpus <- tm_map(corpus, removeWords, stopwords("english"))

# Create a term-document matrix
tdm <- TermDocumentMatrix(corpus)
m <- as.matrix(tdm)
word_freqs <- sort(rowSums(m), decreasing = TRUE)
df <- data.frame(word = names(word_freqs), freq = word_freqs)

# Generate the word cloud
wordcloud(words = df$word, freq = df$freq, min.freq = 1,
          max.words = 100, random.order = FALSE, 
          colors = brewer.pal(8, "Dark2"))

```

### Column {.my-column width="30%"}

-   Word clouds are a great option for analyzing data from free-form responses.

<br>

-   We can clearly see the difference between 2024 and 2025.

<br>

-   How do your favorites compare to [Google Trends](https://trends.google.com/trends/explore?geo=US&hl=en-US){target="_blank"} for the past week?

# Video Games

## Row

### Column {.my-column width="60%"}

```{r vid_game, warning=F, message=F}

svy_vid <- svy_all |>
  dplyr::select(class, fav_vid_game) |>
  separate_wider_delim(fav_vid_game, delim=", ", 
                       names=c("g1","g2","g3", "g4", "g5"), 
                       too_few = "align_start") |>
  pivot_longer(cols=g1:g3, names_to="g", values_to="vid_gms") |>
  filter(!is.na(vid_gms)) |>
  mutate(vid_gms = gsub("none", "NONE", vid_gms, fixed=T),
         vidgmu = gsub(" ", "_", vid_gms, fixed=T))

svy_vid$vid_gmsF <-fct_rev(factor(svy_vid$vid_gms))
  
(svy_vid_gm_plot <- svy_vid |> ggplot() +
  geom_bar(aes(x=vid_gmsF, fill=vid_gmsF), color="darkblue", 
           position = "dodge2") +
  theme_classic() + 
  scale_y_continuous(breaks=1:10) +
  theme(legend.position = "none") +
  labs(x="Video Games", y="Number of Students", 
       title="Favorite Video Games") +
  coord_flip())
  

```

### Column {.my-column width="40%"}

-   The question about Video Games also had a free-form response, but there are limited choices:

<br>

-   Roblox: $\frac{10}{44}=23\%$

-   Fortnite: $\frac{8}{44}=18\%$

-   Minecraft: $\frac{4}{44}=9\%$

-   NONE: $\frac{6}{44}=14\%$

<br>

-   These Top 4 Choices: $64\%$

<br>

-   How do your favorites compare to [Google Trends](https://trends.google.com/trends/explore?geo=US&hl=en-US){target="_blank"} for the past week?

# Star Wars

## Row

### Column {.my-column width="60%"}

```{r star_wars, warning=F, message=F}

svy_stwrs<- svy_all |>
  dplyr::select(class, fav_star_wars) |>
  separate_wider_delim(fav_star_wars, delim=", ", 
                       names=c("sw1","sw2","sw3"), 
                       too_few = "align_start") |>
  pivot_longer(cols=sw1:sw3, names_to="sw", values_to="star_wars") |>
  filter(!is.na(star_wars)) |>
  mutate(star_wars = gsub("none", "NONE", star_wars, fixed=T),
         stwrsu = gsub(" ", "_", star_wars, fixed=T))

svy_stwrs$star_warsF <-fct_rev(factor(svy_stwrs$star_wars))

(svy_stwrs_plot <- svy_stwrs |> ggplot() +
  geom_bar(aes(x=star_warsF, fill=star_warsF), color="darkblue", 
           position = "dodge2") +
  theme_classic() + 
  scale_y_continuous(breaks=1:15) +
  theme(legend.position = "none") +
  labs(x="Star Wars Characters", y="Number of Students", 
       title="Favorite Star Wars Character") +
  coord_flip())

```

### Column {.my-column width="40%"}

![](img/star%20wars.png)

<br>

-   About $\frac{1}{3}$ ($34\%$) of you have no interest in Star Wars, but plenty of you do.

<br>

-   If we combine the two most common responses besides NONE:

    -   **Darth Vader + Anakin Skywalker/Darth Vader**:

    -   $\frac{3+4}{44}=16\%$

<br>

-   The next trilogy may premiere a film as soon as 2026, so you may still get hooked.

# Marvel

## Row

### Column {width="60%"}

```{r marvel, warning=F, message=F}

svy_mrvl<- svy_all |>
  dplyr::select(class, fav_marvel) |>
  mutate(fav_marvel = gsub("none", "NONE", fav_marvel, fixed=T),
         mrvlu = gsub(" ", "_", fav_marvel, fixed=T))

(svy_mrvl_plot <- svy_mrvl |> ggplot() +
  geom_bar(aes(x=fav_marvel, fill=fav_marvel), color="darkblue", 
           position = "dodge2") +
  theme_classic() + 
  scale_y_continuous(breaks=1:15) +
  theme(legend.position = "none") +
  labs(x="Marvel Characters", y="Number of Students", 
       title="Favorite Marvel Character") +
  coord_flip())


```

### Column {.my-column width="40%"}

![](img/marvel.png)

<br>

-   Spiderman is the most popular ($\frac{12}{44}=27\%$) among those who have a favorite Marvel character.

<br>

-   $\frac{15}{44} = 34\%$ of you **also** do not have a favorite Marvel character.

<br>

-   This led me to check if the same 15 students are uninterested in both Star Wars and Marvel.

# Franchises

## Row

### Column {.my-column width="60%"}

```{r franchises, warning=F, message=F}

svy_all <- svy_all |>
  mutate(sw = ifelse(fav_star_wars=="none", "No", "Yes"),
         mv = ifelse(fav_marvel=="none", "No", "Yes"),
         sw_mv = ifelse(sw=="No" & mv=="No", "Neither Franchise", NA),
         sw_mv = ifelse(sw=="Yes" & mv=="No", "Star Wars, but Not Marvel", sw_mv),
         sw_mv = ifelse(sw=="No" & mv=="Yes", "Marvel, but Not Star Wars", sw_mv),
         sw_mv = ifelse(sw=="Yes" & mv=="Yes", "Both Marvel and Starwars", sw_mv),
         sw_mvF = factor(sw_mv, levels=c("Both Marvel and Starwars",
                                         "Marvel, but Not Star Wars",
                                         "Star Wars, but Not Marvel",
                                         "Neither Franchise")))

(sw_mv_plot <- svy_all |>
  ggplot() +
  geom_bar(aes(x=sw_mvF, fill=sw_mvF), color="darkblue",
            position = "dodge2") +
  theme_classic() + 
  theme(legend.position = "none") +
  scale_y_continuous(breaks=1:23) +
  labs(x="Answer", y="Number of Students", 
       title="Interest in Either Franchise") +
  coord_flip())

```

### Column {.my-column width="40%"}

![](img/sw_mv.png)

<br>

-   A fun part of data science is seeing where the data leads you.

<br>

-   In this case I confirmed, that $\frac{9}{44}=20\%$ were not interested in either franchise so about 80% of you had at least one opinion.

    -   So....I get a B in 6th grade pop culture.

# Sixth Grade Language

## Row

### Column {.my-column width="50%"}

```{r gens_words_cloud, warning=F, message=F}

svy_words <- svy_all |>
  dplyr::select(class, age_decimal, w1:w5) |>
  pivot_longer(cols=w1:w5, names_to="w", values_to="words") |>
  filter(!is.na(words)) |>
  mutate(wordsu = gsub(" ", "_", words, fixed=T))

# Create a text corpus
corpus <- Corpus(VectorSource(svy_words$wordsu))

# Clean the text
corpus <- tm_map(corpus, content_transformer(tolower))
#corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
#corpus <- tm_map(corpus, removeWords, stopwords("english"))


# Create a term-document matrix
tdm <- TermDocumentMatrix(corpus)
m <- as.matrix(tdm)
word_freqs <- sort(rowSums(m), decreasing = TRUE)
df <- data.frame(word = names(word_freqs), freq = word_freqs)

# Generate the word cloud
wordcloud(words = df$word, freq = df$freq, min.freq = 1,
          max.words = 150, random.order = FALSE, 
          colors = brewer.pal(8, "Dark2"))

```

### Column {.my-column width="50%"}

![](img/slang.png)

<br>

-   Saving the best for last, asking about the words you use led to some great answers.

<br>

-   I had to filter out a couple answers and edit a few so the algorithm would treat them as phrases.

<br>

-   How do your responses compare to [Google Trends](https://trends.google.com/trends/explore?geo=US&hl=en-US){target="_blank"} for the past week?

    -   Translation: How many older people are trying to figure out what you are saying this week?

# About

## Row {.my-row}

-   This dashboard was created using [Quarto](https://quarto.org/) in [RStudio](https://posit.co/), and the [R Language and Environment](https://cran.r-project.org/).

-   The data used to create this dashboard were collected from Mrs Walsh's sixth grade math students using Google Forms.

-   This presentation was augmented interactively with [Google Trends](https://trends.google.com/trends/explore?geo=US&hl=en-US){target="_blank"}.

## Row {.my-row}

**Software Citations**

Arnold J (2024). *ggthemes: Extra Themes, Scales and Geoms for 'ggplot2'*. R package version 5.1.0, https://github.com/jrnold/ggthemes, <https://jrnold.github.io/ggthemes/>.

Bache S, Wickham H (2022). *magrittr: A Forward-Pipe Operator for R*. R package version 2.0.3, <https://CRAN.R-project.org/package=magrittr>.

Fellows I (2018). *wordcloud: Word Clouds*. doi:10.32614/CRAN.package.wordcloud <https://doi.org/10.32614/CRAN.package.wordcloud>, R package version 2.6, <https://CRAN.R-project.org/package=wordcloud>.

Feinerer I, Hornik K (2025). *tm: Text Mining Package*. doi:10.32614/CRAN.package.tm <https://doi.org/10.32614/CRAN.package.tm>, R package version 0.7-16, <https://CRAN.R-project.org/package=tm>.

Feinerer I, Hornik K, Meyer D (2008). “Text Mining Infrastructure in R.” *Journal of Statistical Software*, *25*(5), 1-54. doi:10.18637/jss.v025.i05 <https://doi.org/10.18637/jss.v025.i05>.

Neuwirth E (2022). *RColorBrewer: ColorBrewer Palettes*. R package version 1.1-3, <https://CRAN.R-project.org/package=RColorBrewer>.

Posit team (2025). RStudio: Integrated Development Environment for R. Posit Software, PBC, Boston, MA. URL http://www.posit.co/.

R Core Team (2025). *R: A Language and Environment for Statistical Computing*. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>.

Rinker, T. W. & Kurkiewicz, D. (2017). pacman: Package Management for R. version 0.5.0. Buffalo, New York. http://github.com/trinker/pacman

Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” *Journal of Open Source Software*, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.

Xie Y (2024). *knitr: A General-Purpose Package for Dynamic Report Generation in R*. R package version 1.48, <https://yihui.org/knitr/>.

Yihui Xie (2015) Dynamic Documents with R and knitr. 2nd edition. Chapman and Hall/CRC. ISBN 978-1498716963

Yihui Xie (2014) knitr: A Comprehensive Tool for Reproducible Research in R. In Victoria Stodden, Friedrich Leisch and Roger D. Peng, editors, Implementing Reproducible Computational Research. Chapman and Hall/CRC. ISBN 978-1466561595

# Thank you

## Row

### Column {.my-column width="30%"}

-   Thank you, again, for completing the survey and for having me join you!

<br>

-   **Questions?**

### Column {.my-column width="70%"}

![Photo Credit: cnycentral.com](img/cloudy_rainbow_syr.png){height="4in"}
